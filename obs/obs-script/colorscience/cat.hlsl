// code generated by automatic build; do not manually edit
/* --------------------------------------------------------------------------------
Chromatic Adaptation Transforms
-------------------------------------------------------------------------------- */

#define matrix_cat_XYZ_Scaling_D60_to_D65 float3x3(\
    0.997749312, 0.0, 0.0,\
    0.0, 1.0, 0.0,\
    0.0, 0.0, 1.079011464\
)
#define matrix_cat_XYZ_Scaling_D60_to_DCIP3 float3x3(\
    0.939100313, 0.0, 0.0,\
    0.0, 1.0, 0.0,\
    0.0, 0.0, 0.945611705\
)
#define matrix_cat_XYZ_Scaling_D65_to_D60 float3x3(\
    1.002255765, 0.0, 0.0,\
    0.0, 1.0, 0.0,\
    0.0, 0.0, 0.926774212\
)
#define matrix_cat_XYZ_Scaling_D65_to_DCIP3 float3x3(\
    0.941218703, 0.0, 0.0,\
    0.0, 1.0, 0.0,\
    0.0, 0.0, 0.876368543\
)
#define matrix_cat_XYZ_Scaling_DCIP3_to_D60 float3x3(\
    1.064848969, 0.0, 0.0,\
    0.0, 1.0, 0.0,\
    0.0, 0.0, 1.05751652\
)
#define matrix_cat_XYZ_Scaling_DCIP3_to_D65 float3x3(\
    1.062452326, 0.0, 0.0,\
    0.0, 1.0, 0.0,\
    0.0, 0.0, 1.141072449\
)
#define matrix_cat_Bradford_D60_to_D65 float3x3(\
    0.987323904, -0.006062169, 0.015845876,\
    -0.007531959, 1.001832321, 0.005293338,\
    0.00305302, -0.005064257, 1.081147527\
)
#define matrix_cat_Bradford_D60_to_DCIP3 float3x3(\
    0.964265012, -0.021300233, -0.002647012,\
    -0.033122492, 1.030598686, 0.000944999,\
    -0.003057139, 0.006720893, 0.941838177\
)
#define matrix_cat_Bradford_D65_to_D60 float3x3(\
    1.012931026, 0.006054132, -0.0148757,\
    0.007630325, 0.998191932, -0.004999018,\
    -0.002824644, 0.004658585, 0.924961741\
)
#define matrix_cat_Bradford_D65_to_DCIP3 float3x3(\
    0.976578897, -0.015436265, -0.016686022,\
    -0.025689666, 1.028539168, -0.003785174,\
    -0.005705746, 0.011077866, 0.871176159\
)
#define matrix_cat_Bradford_DCIP3_to_D60 float3x3(\
    1.037804611, 0.021430283, 0.002895221,\
    0.033351213, 0.971004834, -0.00088053,\
    0.003130647, -0.006859463, 1.061769201\
)
#define matrix_cat_Bradford_DCIP3_to_D65 float3x3(\
    1.024496728, 0.015163541, 0.019688522,\
    0.025612193, 0.972586306, 0.004716352,\
    0.006384231, -0.012268083, 1.147942445\
)
#define matrix_cat_CAT02_D60_to_D65 float3x3(\
    0.988317991, -0.007816256, 0.016645551,\
    -0.00564353, 0.998686699, 0.00662762,\
    0.00035077, 0.001116791, 1.077573915\
)
#define matrix_cat_CAT02_D60_to_DCIP3 float3x3(\
    0.979655622, -0.035093475, -0.003506859,\
    -0.024670911, 1.024631944, -0.001120007,\
    0.000239512, -0.000975875, 0.946352523\
)
#define matrix_cat_CAT02_D65_to_D60 float3x3(\
    1.011870978, 0.007936977, -0.015679437,\
    0.005720259, 1.001366784, -0.00624727,\
    -0.000335311, -0.001040394, 0.928022164\
)
#define matrix_cat_CAT02_D65_to_DCIP3 float3x3(\
    0.991085525, -0.027362287, -0.018395654,\
    -0.019102244, 1.025837747, -0.007053718,\
    -8.0549e-05, -0.001959887, 0.878238458\
)
#define matrix_cat_CAT02_DCIP3_to_D60 float3x3(\
    1.021647216, 0.034994893, 0.003827292,\
    0.024598791, 0.976803896, 0.001247201,\
    -0.000233203, 0.00099842, 1.056688999\
)
#define matrix_cat_CAT02_DCIP3_to_D65 float3x3(\
    1.009516172, 0.026967753, 0.021362003,\
    0.018799243, 0.97533018, 0.008227297,\
    0.000134542, 0.002179032, 1.138663236\
)
#define matrix_cat_Von_Kries_D60_to_D65 float3x3(\
    0.995663132, -0.014998519, 0.016829124,\
    -0.001647481, 1.001234102, 0.000332195,\
    0.0, 0.0, 1.079011464\
)
#define matrix_cat_Von_Kries_D60_to_DCIP3 float3x3(\
    0.9888443, -0.038575341, -0.0087295,\
    -0.004237228, 1.003172521, 0.000855893,\
    0.0, 0.0, 0.945611705\
)
#define matrix_cat_Von_Kries_D65_to_D60 float3x3(\
    1.004380654, 0.015045655, -0.015669755,\
    0.001652658, 0.998792176, -0.000333274,\
    0.0, 0.0, 0.926774212\
)
#define matrix_cat_Von_Kries_D65_to_DCIP3 float3x3(\
    0.993112333, -0.023650939, -0.023572367,\
    -0.002597888, 1.001897113, 0.000525285,\
    0.0, 0.0, 0.876368543\
)
#define matrix_cat_Von_Kries_DCIP3_to_D60 float3x3(\
    1.011448214, 0.038893569, 0.009302073,\
    0.004272183, 0.997001792, -0.000862968,\
    0.0, 0.0, 1.05751652\
)
#define matrix_cat_Von_Kries_DCIP3_to_D65 float3x3(\
    1.00699762, 0.023771342, 0.027071751,\
    0.002611113, 0.998168118, -0.000528057,\
    0.0, 0.0, 1.141072449\
)

uniform int catid_XYZ_Scaling = 0;
uniform int catid_Bradford = 1;
uniform int catid_CAT02 = 2;
uniform int catid_Von_Kries = 3;

uniform int whitepointid_D60 = 0;
uniform int whitepointid_D65 = 1;
uniform int whitepointid_DCIP3 = 2;


float3x3 get_chromatic_adaptation_transform_matrix(int cat_id, int whitepoint_source, int whitepoint_target){
    if (cat_id == 0 && whitepoint_source == 0 && whitepoint_target == 1) return matrix_cat_XYZ_Scaling_D60_to_D65;
    if (cat_id == 0 && whitepoint_source == 0 && whitepoint_target == 2) return matrix_cat_XYZ_Scaling_D60_to_DCIP3;
    if (cat_id == 0 && whitepoint_source == 1 && whitepoint_target == 0) return matrix_cat_XYZ_Scaling_D65_to_D60;
    if (cat_id == 0 && whitepoint_source == 1 && whitepoint_target == 2) return matrix_cat_XYZ_Scaling_D65_to_DCIP3;
    if (cat_id == 0 && whitepoint_source == 2 && whitepoint_target == 0) return matrix_cat_XYZ_Scaling_DCIP3_to_D60;
    if (cat_id == 0 && whitepoint_source == 2 && whitepoint_target == 1) return matrix_cat_XYZ_Scaling_DCIP3_to_D65;
    if (cat_id == 1 && whitepoint_source == 0 && whitepoint_target == 1) return matrix_cat_Bradford_D60_to_D65;
    if (cat_id == 1 && whitepoint_source == 0 && whitepoint_target == 2) return matrix_cat_Bradford_D60_to_DCIP3;
    if (cat_id == 1 && whitepoint_source == 1 && whitepoint_target == 0) return matrix_cat_Bradford_D65_to_D60;
    if (cat_id == 1 && whitepoint_source == 1 && whitepoint_target == 2) return matrix_cat_Bradford_D65_to_DCIP3;
    if (cat_id == 1 && whitepoint_source == 2 && whitepoint_target == 0) return matrix_cat_Bradford_DCIP3_to_D60;
    if (cat_id == 1 && whitepoint_source == 2 && whitepoint_target == 1) return matrix_cat_Bradford_DCIP3_to_D65;
    if (cat_id == 2 && whitepoint_source == 0 && whitepoint_target == 1) return matrix_cat_CAT02_D60_to_D65;
    if (cat_id == 2 && whitepoint_source == 0 && whitepoint_target == 2) return matrix_cat_CAT02_D60_to_DCIP3;
    if (cat_id == 2 && whitepoint_source == 1 && whitepoint_target == 0) return matrix_cat_CAT02_D65_to_D60;
    if (cat_id == 2 && whitepoint_source == 1 && whitepoint_target == 2) return matrix_cat_CAT02_D65_to_DCIP3;
    if (cat_id == 2 && whitepoint_source == 2 && whitepoint_target == 0) return matrix_cat_CAT02_DCIP3_to_D60;
    if (cat_id == 2 && whitepoint_source == 2 && whitepoint_target == 1) return matrix_cat_CAT02_DCIP3_to_D65;
    if (cat_id == 3 && whitepoint_source == 0 && whitepoint_target == 1) return matrix_cat_Von_Kries_D60_to_D65;
    if (cat_id == 3 && whitepoint_source == 0 && whitepoint_target == 2) return matrix_cat_Von_Kries_D60_to_DCIP3;
    if (cat_id == 3 && whitepoint_source == 1 && whitepoint_target == 0) return matrix_cat_Von_Kries_D65_to_D60;
    if (cat_id == 3 && whitepoint_source == 1 && whitepoint_target == 2) return matrix_cat_Von_Kries_D65_to_DCIP3;
    if (cat_id == 3 && whitepoint_source == 2 && whitepoint_target == 0) return matrix_cat_Von_Kries_DCIP3_to_D60;
    if (cat_id == 3 && whitepoint_source == 2 && whitepoint_target == 1) return matrix_cat_Von_Kries_DCIP3_to_D65;
    return matrix_identity_3x3;
}